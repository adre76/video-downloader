#!/bin/bash

# Interrompe o script se qualquer comando falhar
set -e

# --- Vari√°veis ---
NAMESPACE="video-downloader"
HOST="downloader.local"

# --- In√≠cio do Script ---
echo "üöÄ Iniciando o deploy do Video Downloader com Ingress..."

# 1. Cria o Namespace
echo "1. Criando o namespace '$NAMESPACE'..."
kubectl apply -f kubernetes/01-namespace.yaml

# 2. Cria o PersistentVolumeClaim (PVC)
echo "2. Criando o PersistentVolumeClaim (PVC)..."
kubectl apply -f kubernetes/02-pvc.yaml

# 3. Cria o Deployment
echo "3. Criando o Deployment (isso ir√° acionar o binding do PVC)..."
kubectl apply -f kubernetes/03-deployment.yaml

# 4. Cria o Servi√ßo do tipo ClusterIP
echo "4. Criando o Servi√ßo (Service)..."
kubectl apply -f kubernetes/04-service.yaml

# 5. Cria o Ingress para expor a aplica√ß√£o
echo "5. Criando o Ingress para o host '$HOST'..."
kubectl apply -f kubernetes/05-ingress.yaml

# --- Verifica√ß√µes e Espera (ORDEM CORRIGIDA) ---
echo ""
echo "--- Aguardando recursos ficarem prontos ---"

# 1. Aguarda o Deployment ficar totalmente dispon√≠vel.
#    Esta √© a verifica√ß√£o mais importante. Se o pod est√° 'Running', o PVC obrigatoriamente estar√° 'Bound'.
echo "   Aguardando o Deployment ficar dispon√≠vel..."
kubectl wait --for=condition=available deployment/video-downloader-deployment -n $NAMESPACE --timeout=300s
echo "   ‚úÖ Deployment dispon√≠vel!"

# 2. (Verifica√ß√£o de sanidade) Confirma que o PVC est√° vinculado.
#    Neste ponto, ele j√° deve estar 'Bound'. Usamos um timeout curto.
echo "   Verificando o status do PVC..."
kubectl wait --for=condition=Bound pvc/video-downloader-pvc -n $NAMESPACE --timeout=10s
echo "   ‚úÖ PVC vinculado com sucesso!"

echo ""
echo "‚úÖ Deploy conclu√≠do com sucesso!"
echo "--------------------------------------------------"

# --- Instru√ß√µes de Acesso ---
echo "‰∏ã‰∏ÄÊ≠•: Para acessar a aplica√ß√£o, voc√™ precisa mapear '$HOST' para o IP do seu Ingress Controller."
echo ""
echo "1. Encontre o IP do seu Ingress Controller com um dos seguintes comandos:"
echo "   kubectl get svc --all-namespaces | grep -i nginx   (Procure por EXTERNAL-IP)"
echo "   # Ou, se o EXTERNAL-IP estiver <pending>, use o IP de um dos n√≥s do cluster:"
echo "   kubectl get nodes -o wide"
echo ""
echo "2. Edite seu arquivo hosts no seu computador (ex: /etc/hosts no Linux/Mac, C:\\Windows\\System32\\drivers\\etc\\hosts no Windows):"
echo "   Adicione a linha: <IP_DO_INGRESS> $HOST"
echo ""
echo "3. Ap√≥s salvar o arquivo hosts, acesse a aplica√ß√£o no seu navegador:"
echo "   üéâ http://$HOST"
echo "--------------------------------------------------"